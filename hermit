#!/usr/bin/env python3
import argparse
import logging
import pandas as pd

from paguruslib.plotting import cpuPlot, memPlot

def plotter(infile: str, tag: str):
    """
    Plot the results from the runner step. 
    It can be done after the fact with `-j` option to just plot.

    Args:
        infile (str, optional): Input filename for csv. Defaults to "stats.csv".
    """

    # Default to input name without extention
    if tag is None:
        tag = infile[:-4]

    # Load in dataframe and put 0th column as DateTimeIndex
    df = pd.read_csv(infile,
                     index_col=[0],
                     parse_dates=[0])

    cpuPlot(df, tag)
    memPlot(df, tag)



if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument("-t", "--tag", type=str,
                        help="Tags the process and gives a name to the plots and statistcs csv file.", 
                        default=None)
    parser.add_argument("-d", "--debug", action="store_true",
                        help="Run with debugging info.",
                        default=False)
    parser.add_argument("-i", "--input", type=str,
                        help="Input statistics file from pagurus",
                        default=None)

    args = parser.parse_args()

    if args.debug:
        logging.basicConfig(
            format='%(asctime)s %(levelname)s ==> %(message)s', level=logging.INFO)
    else:
        logging.basicConfig(level=logging.FATAL)


    logging.info(f'Using tag {args.tag}')

    plotter(infile=args.input,
            tag=f"{args.tag}" if args.tag is not None else None)

